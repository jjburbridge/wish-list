/* eslint-disable react/jsx-key */
import Head from 'next/head'
import Image from 'next/image'
import { GetStaticProps, NextPage } from 'next/types'
import { getClient } from '../../../../services/sanity/client'
import { OgProduct } from '../../../../components/og/Product'
import { getAllPRoductsQuery } from '../../../../services/sanity/queries/product'
import { scrape } from '../../../../services/scraper'
import styles from '../../../../styles/Home.module.css'




export const List: NextPage<any> = ({productData, listId}) => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to My Wish List
        </h1>

        <div className={styles.grid}>
          List ID: {listId}
          {productData.map((product: any) => <OgProduct {...product} />)}
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

type ListParams = {
  userId: string
  listId: string
};

export const getServerSideProps = async ({ params }) => {

  const {listId, userId} = params;
  if (!listId || !userId) {
    return {
      notFound: true,
    }
  }
  const baseURL = `http://${process.env.VERCEL_URL}`;
   
  const userList = await(await fetch(`${baseURL}/api/sanity/users/${userId}/lists/${listId}`)).json();

  if(!userList) return
  
  const listProducts = userList.list.product;
  
  const productPromieses = Promise.all(listProducts.map(async (product: any) => {
    const og = await scrape(product.url);
    const origin = new URL(product.url).origin;
    return {
      ...product,
      ...og,
      origin
    }
  }))

  const productData = await productPromieses;

  return {
    props: {
      listId,
      productData
    }
  }
}

export default List;
